{"version":3,"file":"static/webpack/static/development/pages/post.js.7ab088e5a431917acaec.hot-update.js","sources":["webpack:///./pages/post.tsx"],"sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\"\nimport { withRouter } from \"next/router\"\nimport Page from \"../components/Page\"\nimport { NextPageContext } from \"next\"\nimport { Post, Frontmatter } from \"../../server/build-posts\"\nimport ReactMarkdown from \"react-markdown/with-html\"\n//import htmlParser from \"react-markdown/plugins/html-parser\"\nimport { Code } from \"../components/Code\"\n// import \"prismjs/themes/prism-tomorrow.css\"\nimport { WithRouterProps } from \"next/dist/client/with-router\"\nimport { config } from \"../config\"\nimport { formatDate } from \"../utils/date\"\nimport \"../post.scss\"\n\ntype Props = { post: Post }\n\ndeclare module \"react\" {\n\tinterface StyleHTMLAttributes<T> extends HTMLAttributes<T> {\n\t\tjsx?: boolean\n\t\tglobal?: boolean\n\t}\n}\n\nclass PostUI extends React.Component<Props & WithRouterProps> {\n\tstatic async getInitialProps(ctx: NextPageContext): Promise<Props> {\n\t\t// todo: only load single post\n\t\t//console.log(posts.map(p => makeUrl(p.filename)), ctx.asPath)\n\n\t\tconst slug = ctx.query.slug\n\t\tconst url = config.blogRoot + slug\n\t\tconst post = require(\"../../posts-built/\" + slug + \".md.json\")\n\n\t\tif (!post) throw Error(`could not find post ${url}`)\n\t\treturn { post }\n\t}\n\trender() {\n\t\tconst { post } = this.props\n\t\tconst meta = post.frontmatter\n\t\tlet footer = undefined\n\t\tif (config.postSourceUrlBase) {\n\t\t\tfooter = (\n\t\t\t\t<a href={config.postSourceUrlBase + post.filename}>\n\t\t\t\t\tView post source on GitHub\n\t\t\t\t</a>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<style jsx global>{`\n\t\t\t\t\t.content a {\n\t\t\t\t\t\tcolor: #0365a5;\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\tborder-bottom: 1px solid #dfdfdf;\n\t\t\t\t\t\ttransition: all 300ms ease;\n\t\t\t\t\t}\n\n\t\t\t\t\ta:hover,\n\t\t\t\t\ta:focus {\n\t\t\t\t\t\tborder-bottom-color: currentColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tcode {\n\t\t\t\t\t\tbackground-color: #eee;\n\t\t\t\t\t\tline-height: 1;\n\t\t\t\t\t\tborder-radius: 2px;\n\t\t\t\t\t\tpadding: 1px;\n\t\t\t\t\t}\n\t\t\t\t\tcode {\n\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t}\n\t\t\t\t\tpre code {\n\t\t\t\t\t\tborder: none;\n\t\t\t\t\t}\n\t\t\t\t\tpre {\n\t\t\t\t\t\twhite-space: pre-wrap;\n\t\t\t\t\t\tword-wrap: break-word;\n\t\t\t\t\t}\n\t\t\t\t`}</style>\n\t\t\t\t<Page\n\t\t\t\t\ttitle={meta.title}\n\t\t\t\t\tdescription={post.preview}\n\t\t\t\t\tfooter={<a href=\"\" />}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"content center mw7 pa3 pa4-ns\">\n\t\t\t\t\t\t<h1 className=\"mt0 lh-title\">{meta.title}</h1>\n\t\t\t\t\t\t<PostDate post={post} />\n\n\t\t\t\t\t\t<ReactMarkdown\n\t\t\t\t\t\t\tescapeHtml={false}\n\t\t\t\t\t\t\trenderers={{ code: Code }}\n\t\t\t\t\t\t\t//astPlugins={[htmlParser()]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{post.content_md}\n\t\t\t\t\t\t</ReactMarkdown>\n\t\t\t\t\t</div>\n\t\t\t\t</Page>\n\t\t\t</div>\n\t\t)\n\t}\n}\nfunction PostDate({ post: { frontmatter: meta, filename } }: { post: Post }) {\n\tlet updated = null\n\tif (meta.updated) {\n\t\tconst SLink = config.postSourceHistoryUrlBase\n\t\t\t? ({ children = null as any }) => (\n\t\t\t\t\t<a href={config.postSourceHistoryUrlBase + filename}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</a>\n\t\t\t  )\n\t\t\t: Fragment\n\t\tupdated = (\n\t\t\t<>\n\t\t\t\t{\" â€¢ \"}\n\t\t\t\t<SLink>\n\t\t\t\t\t{\"Last Update \"}\n\t\t\t\t\t<time dateTime={new Date(meta.date).toISOString()}>\n\t\t\t\t\t\t{formatDate(meta.updated)}\n\t\t\t\t\t</time>\n\t\t\t\t</SLink>\n\t\t\t</>\n\t\t)\n\t}\n\treturn (\n\t\t<small className=\"db ttu o-40\">\n\t\t\t<time dateTime={new Date(meta.date).toISOString()}>\n\t\t\t\t{formatDate(meta.date)}\n\t\t\t</time>\n\t\t\t{updated}\n\t\t</small>\n\t)\n}\n\nexport default withRouter(PostUI)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;;;;;;;;;;;;;AAYA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAgCA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAWA;;;;;;AA1EA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAAA;AACA;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAXA;AACA;AA4EA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAMA;AAKA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}