/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["sqlite-httpvfs_SqliteHttpvfsDemo_tsx"],{

/***/ "./sqlite-httpvfs/SqliteHttpvfsDemo.tsx":
/*!**********************************************!*\
  !*** ./sqlite-httpvfs/SqliteHttpvfsDemo.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SqliteHttpvfsDemo\": function() { return /* binding */ SqliteHttpvfsDemo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"../node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/regenerator */ \"../node_modules/next/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"../node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"../node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass */ \"../node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"../node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! sql.js-httpvfs */ \"../../../2021/sponsorblock-stats/dist/index.js\");\n/* harmony import */ var sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _components_CodeBlock__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/CodeBlock */ \"./components/CodeBlock.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\n\n\n\nvar _jsxFileName = \"/home/tehdog/data/dev/2019/blog/client/sqlite-httpvfs/SqliteHttpvfsDemo.tsx\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n //import workerUrl from \"sql.js-httpvfs/dist/sqlite.worker.js?resource\"\n//import wasmUrl from \"sql.js-httpvfs/dist/sql-wasm.js?resource\"\n\n\n\nvar Store = /*#__PURE__*/function () {\n  function Store() {\n    (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__.default)(this, Store);\n\n    (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__.default)(this, \"db\", null);\n\n    (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__.default)(this, \"error\", \"\");\n\n    (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__.default)(this, \"ready\", void 0);\n\n    if (false) {} else {\n      this.ready = this.init();\n    }\n  }\n\n  (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__.default)(Store, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__.default)( /*#__PURE__*/_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee() {\n        var workerUrl, wasmUrl;\n        return _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                /*\n                const workerUrl = new URL(\n                \t\"sql.js-httpvfs/dist/sqlite.worker.js\",\n                \timport.meta.url,\n                )\n                const wasmUrl = new URL(\n                \t\"sql.js-httpvfs/dist/sql-wasm.wasm\",\n                \timport.meta.url,\n                )*/\n                // until nextjs fixes their webpack5 support:\n                workerUrl = \"/blog/sqlite.worker.js\";\n                wasmUrl = \"/blog/sql-wasm.wasm\";\n                _context.next = 4;\n                return (0,sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_8__.createDbWorker)(new URLSearchParams(location.search).get(\"dbUrl\") || \"https://phiresky.github.io/world-development-indicators-sqlite/split-db/config.json\", workerUrl.toString(), wasmUrl.toString());\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }]);\n\n  return Store;\n}();\n\nvar store;\n\nfunction getStore() {\n  if (!store) store = new Store();\n  return store;\n}\n\nvar SqliteHttpvfsDemo = function SqliteHttpvfsDemo(props) {\n  _s();\n\n  var _props$className;\n\n  var store = getStore();\n  var config = {};\n\n  var _iterator = _createForOfIteratorHelper(((_props$className = props.className) === null || _props$className === void 0 ? void 0 : _props$className.split(\" \")) || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cls = _step.value;\n      config[cls] = true;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  react__WEBPACK_IMPORTED_MODULE_7__.useEffect(function () {\n    if (config.autorun) void run();\n  }, []);\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_7__.useState(\"\"),\n      _React$useState2 = (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_React$useState, 2),\n      output = _React$useState2[0],\n      setOutput = _React$useState2[1];\n\n  function run() {\n    return _run.apply(this, arguments);\n  }\n\n  function _run() {\n    _run = (0,_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__.default)( /*#__PURE__*/_home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee2() {\n      var db, result;\n      return _home_tehdog_data_dev_2019_blog_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setOutput(\"[running...]\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return store.ready;\n\n            case 4:\n              db = _context2.sent;\n              _context2.next = 7;\n              return db.query(props.value);\n\n            case 7:\n              result = _context2.sent;\n              setOutput(JSON.stringify(result, null, 2));\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              setOutput(\"[error: \".concat(String(_context2.t0), \"]\"));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n    return _run.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_9__.default, {\n      language: \"sql\",\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n      onClick: run,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_9__.default, {\n      language: \"json\",\n      value: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(SqliteHttpvfsDemo, \"vXzm/CvPlmkwY95K0bkmfeHkXbk=\");\n\n_c = SqliteHttpvfsDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SqliteHttpvfsDemo\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3FsaXRlLWh0dHB2ZnMvU3FsaXRlSHR0cHZmc0RlbW8udHN4PzcxYzMiXSwibmFtZXMiOlsiU3RvcmUiLCJyZWFkeSIsImluaXQiLCJ3b3JrZXJVcmwiLCJ3YXNtVXJsIiwiY3JlYXRlRGJXb3JrZXIiLCJVUkxTZWFyY2hQYXJhbXMiLCJsb2NhdGlvbiIsInNlYXJjaCIsImdldCIsInRvU3RyaW5nIiwic3RvcmUiLCJnZXRTdG9yZSIsIlNxbGl0ZUh0dHB2ZnNEZW1vIiwicHJvcHMiLCJjb25maWciLCJjbGFzc05hbWUiLCJzcGxpdCIsImNscyIsIlJlYWN0IiwiYXV0b3J1biIsInJ1biIsIm91dHB1dCIsInNldE91dHB1dCIsImRiIiwicXVlcnkiLCJ2YWx1ZSIsInJlc3VsdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtDQUVBO0FBQ0E7O0FBRUE7O0lBRU1BLEs7QUFJTCxtQkFBYztBQUFBOztBQUFBLGlLQUhxQixJQUdyQjs7QUFBQSxvS0FGTixFQUVNOztBQUFBOztBQUNiLGVBQW1DLEVBQW5DLE1BS087QUFDTixXQUFLQyxLQUFMLEdBQWEsS0FBS0MsSUFBTCxFQUFiO0FBQ0E7QUFDRDs7Ozs7Ozs7Ozs7QUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRTtBQUNNQyx5QixHQUFZLHdCO0FBQ1pDLHVCLEdBQVUscUI7O3VCQUVIQyw4REFBYyxDQUMxQixJQUFJQyxlQUFKLENBQW9CQyxRQUFRLENBQUNDLE1BQTdCLEVBQXFDQyxHQUFyQyxDQUF5QyxPQUF6QyxLQUNDLHFGQUZ5QixFQUkxQk4sU0FBUyxDQUFDTyxRQUFWLEVBSjBCLEVBSzFCTixPQUFPLENBQUNNLFFBQVIsRUFMMEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYzdCLElBQUlDLEtBQUo7O0FBQ0EsU0FBU0MsUUFBVCxHQUFvQjtBQUNuQixNQUFJLENBQUNELEtBQUwsRUFBWUEsS0FBSyxHQUFHLElBQUlYLEtBQUosRUFBUjtBQUNaLFNBQU9XLEtBQVA7QUFDQTs7QUFFTSxJQUFNRSxpQkFBc0MsR0FBRyxTQUF6Q0EsaUJBQXlDLENBQUNDLEtBQUQsRUFBVztBQUFBOztBQUFBOztBQUNoRSxNQUFNSCxLQUFLLEdBQUdDLFFBQVEsRUFBdEI7QUFDQSxNQUFNRyxNQUFjLEdBQUcsRUFBdkI7O0FBRmdFLDZDQUc3QyxxQkFBQUQsS0FBSyxDQUFDRSxTQUFOLHNFQUFpQkMsS0FBakIsQ0FBdUIsR0FBdkIsTUFBK0IsRUFIYztBQUFBOztBQUFBO0FBR2hFLHdEQUE0RDtBQUFBLFVBQWpEQyxHQUFpRDtBQUMzREgsWUFBTSxDQUFDRyxHQUFELENBQU4sR0FBYyxJQUFkO0FBQ0E7QUFMK0Q7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFNaEVDLDhDQUFBLENBQWdCLFlBQU07QUFDckIsUUFBSUosTUFBTSxDQUFDSyxPQUFYLEVBQW9CLEtBQUtDLEdBQUcsRUFBUjtBQUNwQixHQUZELEVBRUcsRUFGSDs7QUFOZ0Usd0JBU3BDRiwyQ0FBQSxDQUFlLEVBQWYsQ0FUb0M7QUFBQTtBQUFBLE1BU3pERyxNQVR5RDtBQUFBLE1BU2pEQyxTQVRpRDs7QUFBQSxXQVVqREYsR0FWaUQ7QUFBQTtBQUFBOztBQUFBO0FBQUEsaVRBVWhFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNDRSx1QkFBUyxDQUFDLGNBQUQsQ0FBVDtBQUREO0FBQUE7QUFBQSxxQkFHbUJaLEtBQUssQ0FBQ1YsS0FIekI7O0FBQUE7QUFHUXVCLGdCQUhSO0FBQUE7QUFBQSxxQkFJdUJBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTWCxLQUFLLENBQUNZLEtBQWYsQ0FKdkI7O0FBQUE7QUFJUUMsb0JBSlI7QUFLRUosdUJBQVMsQ0FBQ0ssSUFBSSxDQUFDQyxTQUFMLENBQWVGLE1BQWYsRUFBdUIsSUFBdkIsRUFBNkIsQ0FBN0IsQ0FBRCxDQUFUO0FBTEY7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFPRUosdUJBQVMsbUJBQVlPLE1BQU0sY0FBbEIsT0FBVDs7QUFQRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQVZnRTtBQUFBO0FBQUE7O0FBcUJoRSxzQkFDQztBQUFLLFNBQUssRUFBRSxFQUFaO0FBQUEsNEJBQ0MsOERBQUMsMERBQUQ7QUFBVyxjQUFRLEVBQUMsS0FBcEI7QUFBMEIsV0FBSyxFQUFFaEIsS0FBSyxDQUFDWTtBQUF2QztBQUFBO0FBQUE7QUFBQTtBQUFBLGFBREQsZUFFQztBQUFRLGFBQU8sRUFBRUwsR0FBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFGRCxlQUdDLDhEQUFDLDBEQUFEO0FBQVcsY0FBUSxFQUFDLE1BQXBCO0FBQTJCLFdBQUssRUFBRUM7QUFBbEM7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUhEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUREO0FBT0EsQ0E1Qk07O0dBQU1ULGlCOztLQUFBQSxpQiIsImZpbGUiOiIuL3NxbGl0ZS1odHRwdmZzL1NxbGl0ZUh0dHB2ZnNEZW1vLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjcmVhdGVEYldvcmtlciwgV29ya2VySHR0cHZmc0RhdGFiYXNlIH0gZnJvbSBcInNxbC5qcy1odHRwdmZzXCJcbi8vaW1wb3J0IHdvcmtlclVybCBmcm9tIFwic3FsLmpzLWh0dHB2ZnMvZGlzdC9zcWxpdGUud29ya2VyLmpzP3Jlc291cmNlXCJcbi8vaW1wb3J0IHdhc21VcmwgZnJvbSBcInNxbC5qcy1odHRwdmZzL2Rpc3Qvc3FsLXdhc20uanM/cmVzb3VyY2VcIlxuaW1wb3J0IHsgQ29kZVByb3BzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ29kZVwiXG5pbXBvcnQgQ29kZUJsb2NrIGZyb20gXCIuLi9jb21wb25lbnRzL0NvZGVCbG9ja1wiXG5cbmNsYXNzIFN0b3JlIHtcblx0ZGI6IFdvcmtlckh0dHB2ZnNEYXRhYmFzZSB8IG51bGwgPSBudWxsXG5cdGVycm9yID0gXCJcIlxuXHRyZWFkeTogUHJvbWlzZTxXb3JrZXJIdHRwdmZzRGF0YWJhc2U+XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR0aGlzLnJlYWR5ID0gUHJvbWlzZS5yZWplY3QoXCJbc2VydmVyIHNpZGVdXCIpXG5cdFx0XHR0aGlzLnJlYWR5LmNhdGNoKCgpID0+IHtcblx0XHRcdFx0Ly8gaWdub3JlXG5cdFx0XHR9KVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnJlYWR5ID0gdGhpcy5pbml0KClcblx0XHR9XG5cdH1cblx0YXN5bmMgaW5pdCgpIHtcblx0XHQvKlxuXHRcdGNvbnN0IHdvcmtlclVybCA9IG5ldyBVUkwoXG5cdFx0XHRcInNxbC5qcy1odHRwdmZzL2Rpc3Qvc3FsaXRlLndvcmtlci5qc1wiLFxuXHRcdFx0aW1wb3J0Lm1ldGEudXJsLFxuXHRcdClcblx0XHRjb25zdCB3YXNtVXJsID0gbmV3IFVSTChcblx0XHRcdFwic3FsLmpzLWh0dHB2ZnMvZGlzdC9zcWwtd2FzbS53YXNtXCIsXG5cdFx0XHRpbXBvcnQubWV0YS51cmwsXG5cdFx0KSovXG5cdFx0Ly8gdW50aWwgbmV4dGpzIGZpeGVzIHRoZWlyIHdlYnBhY2s1IHN1cHBvcnQ6XG5cdFx0Y29uc3Qgd29ya2VyVXJsID0gXCIvYmxvZy9zcWxpdGUud29ya2VyLmpzXCJcblx0XHRjb25zdCB3YXNtVXJsID0gXCIvYmxvZy9zcWwtd2FzbS53YXNtXCJcblxuXHRcdHJldHVybiBhd2FpdCBjcmVhdGVEYldvcmtlcihcblx0XHRcdG5ldyBVUkxTZWFyY2hQYXJhbXMobG9jYXRpb24uc2VhcmNoKS5nZXQoXCJkYlVybFwiKSB8fFxuXHRcdFx0XHRcImh0dHBzOi8vcGhpcmVza3kuZ2l0aHViLmlvL3dvcmxkLWRldmVsb3BtZW50LWluZGljYXRvcnMtc3FsaXRlL3NwbGl0LWRiL2NvbmZpZy5qc29uXCIsXG5cblx0XHRcdHdvcmtlclVybC50b1N0cmluZygpLFxuXHRcdFx0d2FzbVVybC50b1N0cmluZygpLFxuXHRcdClcblx0fVxufVxudHlwZSBDb25maWcgPSB7XG5cdGF1dG9ydW4/OiBib29sZWFuXG59XG50eXBlIFogPSAoa2V5b2YgQ29uZmlnKVtdXG5cbmxldCBzdG9yZTogU3RvcmVcbmZ1bmN0aW9uIGdldFN0b3JlKCkge1xuXHRpZiAoIXN0b3JlKSBzdG9yZSA9IG5ldyBTdG9yZSgpXG5cdHJldHVybiBzdG9yZVxufVxuXG5leHBvcnQgY29uc3QgU3FsaXRlSHR0cHZmc0RlbW86IFJlYWN0LkZDPENvZGVQcm9wcz4gPSAocHJvcHMpID0+IHtcblx0Y29uc3Qgc3RvcmUgPSBnZXRTdG9yZSgpXG5cdGNvbnN0IGNvbmZpZzogQ29uZmlnID0ge31cblx0Zm9yIChjb25zdCBjbHMgb2YgKHByb3BzLmNsYXNzTmFtZT8uc3BsaXQoXCIgXCIpIHx8IFtdKSBhcyBaKSB7XG5cdFx0Y29uZmlnW2Nsc10gPSB0cnVlXG5cdH1cblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0XHRpZiAoY29uZmlnLmF1dG9ydW4pIHZvaWQgcnVuKClcblx0fSwgW10pXG5cdGNvbnN0IFtvdXRwdXQsIHNldE91dHB1dF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKVxuXHRhc3luYyBmdW5jdGlvbiBydW4oKSB7XG5cdFx0c2V0T3V0cHV0KFwiW3J1bm5pbmcuLi5dXCIpXG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IGRiID0gYXdhaXQgc3RvcmUucmVhZHlcblx0XHRcdGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLnF1ZXJ5KHByb3BzLnZhbHVlKVxuXHRcdFx0c2V0T3V0cHV0KEpTT04uc3RyaW5naWZ5KHJlc3VsdCwgbnVsbCwgMikpXG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0c2V0T3V0cHV0KGBbZXJyb3I6ICR7U3RyaW5nKGUpfV1gKVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBzdHlsZT17e319PlxuXHRcdFx0PENvZGVCbG9jayBsYW5ndWFnZT1cInNxbFwiIHZhbHVlPXtwcm9wcy52YWx1ZX0gLz5cblx0XHRcdDxidXR0b24gb25DbGljaz17cnVufT5SdW48L2J1dHRvbj5cblx0XHRcdDxDb2RlQmxvY2sgbGFuZ3VhZ2U9XCJqc29uXCIgdmFsdWU9e291dHB1dH0gLz5cblx0XHQ8L2Rpdj5cblx0KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./sqlite-httpvfs/SqliteHttpvfsDemo.tsx\n");

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _asyncToGenerator; }\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzP2E5ZGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\n");

/***/ }),

/***/ "../../../2021/sponsorblock-stats/dist/index.js":
/*!******************************************************!*\
  !*** ../../../2021/sponsorblock-stats/dist/index.js ***!
  \******************************************************/
/***/ (function(module) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse { var i, a; }\n})(this, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/comlink/dist/esm/comlink.mjs\":\n/*!***************************************************!*\\\n  !*** ./node_modules/comlink/dist/esm/comlink.mjs ***!\n  \\***************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_757__) => {\n\n__nested_webpack_require_757__.r(__webpack_exports__);\n/* harmony export */ __nested_webpack_require_757__.d(__webpack_exports__, {\n/* harmony export */   \"createEndpoint\": () => (/* binding */ createEndpoint),\n/* harmony export */   \"expose\": () => (/* binding */ expose),\n/* harmony export */   \"proxy\": () => (/* binding */ proxy),\n/* harmony export */   \"proxyMarker\": () => (/* binding */ proxyMarker),\n/* harmony export */   \"releaseProxy\": () => (/* binding */ releaseProxy),\n/* harmony export */   \"transfer\": () => (/* binding */ transfer),\n/* harmony export */   \"transferHandlers\": () => (/* binding */ transferHandlers),\n/* harmony export */   \"windowEndpoint\": () => (/* binding */ windowEndpoint),\n/* harmony export */   \"wrap\": () => (/* binding */ wrap)\n/* harmony export */ });\n/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\n\n//# sourceMappingURL=comlink.mjs.map\n\n\n/***/ }),\n\n/***/ \"./src/db.ts\":\n/*!*******************!*\\\n  !*** ./src/db.ts ***!\n  \\*******************/\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_12435__) {\n\n\n/// <reference lib=\"dom\" />\n/// <reference lib=\"dom.iterable\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDbWorker = void 0;\n// TODO: using comlink for all this is a pretty ugly hack\nconst Comlink = __importStar(__nested_webpack_require_12435__(/*! comlink */ \"./node_modules/comlink/dist/esm/comlink.mjs\"));\nComlink.transferHandlers.set(\"WORKERSQLPROXIES\", {\n    canHandle: (obj) => false,\n    serialize(obj) {\n        throw Error(\"no\");\n    },\n    deserialize: (port) => {\n        port.start();\n        return Comlink.wrap(port);\n    },\n});\nasync function createDbWorker(databaseConfigUrl, workerUrl, wasmUrl) {\n    const worker = new Worker(workerUrl);\n    const sqlite = Comlink.wrap(worker);\n    const configUrl = new URL(databaseConfigUrl, location.href);\n    const req = await fetch(configUrl.toString());\n    if (!req.ok)\n        throw Error(`Could not load httpvfs config: ${req.status}: ${await req.text()}`);\n    const config = await req.json();\n    const db = (await sqlite.SplitFileHttpDatabase(wasmUrl, {\n        ...config,\n        urlPrefix: new URL(config.urlPrefix, configUrl).toString(),\n    }));\n    db.worker = sqlite;\n    const pageSizeResp = await db.exec(\"pragma page_size\");\n    const pageSize = pageSizeResp[0].values[0][0];\n    if (pageSize !== config.requestChunkSize)\n        console.warn(`Chunk size does not match page size: pragma page_size = ${pageSize} but chunkSize = ${config.requestChunkSize}`);\n    worker.addEventListener(\"message\", handleAsyncRequestFromWorkerThread);\n    return db;\n}\nexports.createDbWorker = createDbWorker;\nasync function handleAsyncRequestFromWorkerThread(ev) {\n    if (ev.data && ev.data.action === \"eval\") {\n        const metaArray = new Int32Array(ev.data.notify, 0, 2);\n        const dataArray = new Uint8Array(ev.data.notify, 2 * 4);\n        let response;\n        try {\n            response = { ok: await handleDomVtableRequest(ev.data.request) };\n        }\n        catch (e) {\n            console.error(\"worker request error\", ev.data.request, e);\n            response = { err: String(e) };\n        }\n        const text = new TextEncoder().encode(JSON.stringify(response));\n        dataArray.set(text, 0); // need to copy here because:\n        // sadly TextEncoder.encodeInto: Argument 2 can't be a SharedArrayBuffer or an ArrayBufferView backed by a SharedArrayBuffer [AllowShared]\n        // otherwise this would be better:\n        /*const encodeRes = new TextEncoder().encodeInto(response, data);\n        if (encodeRes.read !== response.length) {\n          console.log(encodeRes, response.length)\n          throw Error(`not enough space for response: ${response.length} > ${data.byteLength}`);\n        }*/\n        metaArray[1] = text.length;\n        Atomics.notify(metaArray, 0);\n    }\n}\nfunction getUniqueSelector(elm) {\n    if (elm.tagName === \"BODY\")\n        return \"body\";\n    const names = [];\n    while (elm.parentElement && elm.tagName !== \"BODY\") {\n        if (elm.id) {\n            // assume id is unique (which it isn't)\n            names.unshift(\"#\" + elm.id);\n            break;\n        }\n        else {\n            let c = 1;\n            let e = elm;\n            while (e.previousElementSibling) {\n                e = e.previousElementSibling;\n                c++;\n            }\n            names.unshift(elm.tagName.toLowerCase() + \":nth-child(\" + c + \")\");\n        }\n        elm = elm.parentElement;\n    }\n    return names.join(\" > \");\n}\nfunction keys(o) {\n    return Object.keys(o);\n}\nasync function handleDomVtableRequest(req) {\n    console.log(\"dom vtable request\", req);\n    if (req.type === \"select\") {\n        return [...document.querySelectorAll(req.selector)].map((e) => {\n            const out = {};\n            for (const column of req.columns) {\n                if (column === \"selector\") {\n                    out.selector = getUniqueSelector(e);\n                }\n                else if (column === \"parent\") {\n                    if (e.parentElement) {\n                        out.parent = e.parentElement\n                            ? getUniqueSelector(e.parentElement)\n                            : null;\n                    }\n                }\n                else if (column === \"idx\") {\n                    // ignore\n                }\n                else {\n                    out[column] = e[column];\n                }\n            }\n            return out;\n        });\n    }\n    else if (req.type === \"insert\") {\n        if (!req.value.parent)\n            throw Error(`\"parent\" column must be set when inserting`);\n        const target = document.querySelectorAll(req.value.parent);\n        if (target.length === 0)\n            throw Error(`Parent element ${req.value.parent} could not be found`);\n        if (target.length > 1)\n            throw Error(`Parent element ${req.value.parent} ambiguous (${target.length} results)`);\n        const parent = target[0];\n        if (!req.value.tagName)\n            throw Error(`tagName must be set for inserting`);\n        const ele = document.createElement(req.value.tagName);\n        const cantSet = [\"idx\"];\n        for (const i of keys(req.value)) {\n            if (req.value[i] !== null) {\n                if (i === \"tagName\" || i === \"parent\")\n                    continue;\n                if (i === \"idx\" || i === \"selector\")\n                    throw Error(`${i} can't be set`);\n                ele[i] = req.value[i];\n            }\n        }\n        parent.appendChild(ele);\n        return null;\n    }\n    else if (req.type === \"update\") {\n        const targetElement = document.querySelector(req.value.selector);\n        if (!targetElement)\n            throw Error(`Element ${req.value.selector} not found!`);\n        const toSet = [];\n        for (const k of keys(req.value)) {\n            const v = req.value[k];\n            if (k === \"parent\") {\n                if (v !== getUniqueSelector(targetElement.parentElement)) {\n                    const targetParent = document.querySelectorAll(v);\n                    if (targetParent.length !== 1)\n                        throw Error(`Invalid target parent: found ${targetParent.length} matches`);\n                    targetParent[0].appendChild(targetElement);\n                }\n                continue;\n            }\n            if (k === \"idx\" || k === \"selector\")\n                continue;\n            if (v !== targetElement[k]) {\n                console.log(\"SETTING \", k, targetElement[k], \"->\", v);\n                if (k === \"tagName\")\n                    throw Error(\"can't change tagName\");\n                toSet.push(k); // defer setting to prevent setting multiple interdependent values (e.g. textContent and innerHTML)\n            }\n        }\n        for (const k of toSet) {\n            targetElement[k] = req.value[k];\n        }\n        return null;\n    }\n    else {\n        throw Error(`unknown request ${req.type}`);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_20363__) {\n\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__nested_webpack_require_20363__(/*! ./db */ \"./src/db.ts\"), exports);\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_21267__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_21267__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_21267__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_21267__.o(definition, key) && !__nested_webpack_require_21267__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_21267__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_21267__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __nested_webpack_require_21267__(\"./src/index.ts\");\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../2021/sponsorblock-stats/dist/index.js\n");

/***/ })

}]);